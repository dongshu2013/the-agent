// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id              String          @id @default(uuid())
  username        String          @unique
  email           String?         @unique
  api_key         String          @unique @default(uuid())
  api_key_enabled Boolean         @default(true)
  conversations   conversations[]
  created_at      DateTime        @default(now())
  updated_at      DateTime        @updatedAt
}

model conversations {
  id         String     @id @default(uuid())
  user       users      @relation(fields: [user_id], references: [id])
  user_id    String
  messages   messages[]
  created_at DateTime   @default(now())
  status     String     @default("active") // "active" or "deleted"
}

model messages {
  id              String                       @id @default(uuid())
  conversation    conversations                @relation(fields: [conversation_id], references: [id])
  conversation_id String
  role            String // "system", "user", "assistant", or "tooling"
  content         Json // Array of text_message or image_message objects
  embedding       Unsupported("vector(1536)")? // OpenAI embedding vector (added via raw SQL)
  created_at      DateTime                     @default(now())
}

// Types for reference (not actual models):
// 
// text_message {
//   type: "text"
//   text: string,
// }
//
// image_message {
//   type: "image_url",
//   image_url: {url: string}
// }
