// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id              String          @id @default(uuid())
  username        String          @unique
  email           String?         @unique
  api_key         String          @unique @default(uuid())
  api_key_enabled Boolean         @default(true)
  credits         Decimal         @default(0) @db.Decimal(10, 2)
  conversations   conversations[]
  created_at      DateTime        @default(now())
  updated_at      DateTime        @updatedAt
}

model conversations {
  id         String     @id @default(uuid())
  user       users      @relation(fields: [user_id], references: [id])
  user_id    String
  messages   messages[]
  created_at DateTime   @default(now())
  status     String     @default("active") // "active" or "deleted"
}

model messages {
  id              String        @id @default(uuid())
  conversation    conversations @relation(fields: [conversation_id], references: [id])
  conversation_id String
  role            String // "system", "user", "assistant", or "tooling"
  content         Json // Array of text_message or image_message objects
  created_at      DateTime      @default(now())
  tool_calls      Json          @default("{}")
}

// Types for reference (not actual models):
// 
// text_message {
//   type: "text"
//   text: string,
// }
//
// image_message {
//   type: "image_url",
//   image_url: {url: string}
// }

// Telegram chats
model tg_chats {
  id               String        @id @default(uuid())
  user_id          String
  chat_id          String
  chat_type        String
  chat_title       String
  is_public        Boolean       @default(false)
  is_free          Boolean       @default(false)
  subscription_fee Decimal       @default(0)
  last_synced_at   DateTime      @default(now())
  status           String        @default("watching") // watching, quiet
  created_at       DateTime      @default(now())
  updated_at       DateTime      @default(now())
  messages         tg_messages[]

  @@unique([user_id, chat_id])
}

// Telegram messagess
model tg_messages {
  id                String   @id @default(uuid())
  chat_id           String
  message_id        String
  message_text      String
  message_timestamp BigInt
  sender_id         String?
  reply_to_msg_id   String?
  is_pinned         Boolean  @default(false)
  created_at        DateTime @default(now())
  updated_at        DateTime @default(now())
  sender_username   String?
  sender_firstname  String?
  sender_lastname   String?

  chat tg_chats @relation(fields: [chat_id], references: [id])

  @@unique([chat_id, message_id])
}

// Telegram users
model tg_users {
  id         String   @id @default(uuid())
  user_id    String
  user_type  String
  username   String
  first_name String?
  last_name  String?
  photo_url  String?
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}
