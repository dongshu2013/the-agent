// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id              String          @id @default(uuid())
  username        String          @unique
  email           String?         @unique
  api_key         String          @unique @default(uuid())
  api_key_enabled Boolean         @default(true)
  conversations   conversations[]
  created_at      DateTime        @default(now())
  updated_at      DateTime        @updatedAt
}

model conversations {
  id         String     @id @default(uuid())
  user       users      @relation(fields: [user_id], references: [id])
  user_id    String
  messages   messages[]
  created_at DateTime   @default(now())
  status     String     @default("active") // "active" or "deleted"
}

model messages {
  id              String        @id @default(uuid())
  conversation    conversations @relation(fields: [conversation_id], references: [id])
  conversation_id String
  role            String // "system", "user", "assistant", or "tooling"
  content         Json // Array of text_message or image_message objects
  created_at      DateTime      @default(now())
}

// Types for reference (not actual models):
// 
// text_message {
//   type: "text"
//   text: string,
// }
//
// image_message {
//   type: "image_url",
//   image_url: {url: string}
// }

model tg_channels {
  id               Int      @id @default(autoincrement())
  channel_id       String   @unique
  user_id          String
  data_type        String
  data_id          String
  metadata         Json     @default("{}")
  is_public        Boolean  @default(false)
  is_free          Boolean  @default(false)
  subscription_fee Decimal  @default(0)
  last_synced_at   DateTime @default(now())
  status           String   @default("watching") 
  created_at       DateTime @default(now())
  updated_at       DateTime @default(now())
  messages         tg_messages[]

  @@unique([user_id, data_id])
}

model tg_messages {
  id               Int      @id @default(autoincrement())
  message_id       String
  channel_id       String
  chat_id          String
  message_text     String
  message_timestamp BigInt
  sender_id        String?
  sender           Json?    @default("{}")
  reply_to         String?
  topic_id         String?
  buttons          Json?    @default("[]")
  reactions        Json?    @default("[]")
  is_pinned        Boolean  @default(false)
  media_type       String?
  media_file_id    String?
  media_url        String?
  media_metadata   Json?    @default("{}")
  created_at       DateTime @default(now())
  updated_at       DateTime @default(now())
  send_username    String?
  send_firstname   String?
  send_lastname    String?

  channels         tg_channels @relation(fields: [channel_id], references: [channel_id])

  @@unique([channel_id, message_id])
}
